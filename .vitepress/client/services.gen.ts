// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { GetNavDatasResponse, CreateNavDataResponse, RegisterData, RegisterResponse, LoginData, LoginResponse, LogoutResponse, GetUserInfoResponse, GetProductsResponse, CreateProductData, CreateProductResponse, GetOrdersResponse, CreateOrderData, CreateOrderResponse, UpdateOrderPayStatusData, UpdateOrderPayStatusResponse, GetWalletResponse } from './types.gen';

export class NavigationService {
    /**
     * 获取导航数据
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static getNavDatas(): CancelablePromise<GetNavDatasResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v1/nav_datas'
        });
    }
    
    /**
     * Create Nav Data
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static createNavData(): CancelablePromise<CreateNavDataResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/nav_datas'
        });
    }
    
}

export class DefaultService {
    /**
     * Register
     * @param data The data for the request.
     * @param data.requestBody
     * @returns UserOut Successful Response
     * @throws ApiError
     */
    public static register(data: RegisterData): CancelablePromise<RegisterResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/auth/register',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Login
     * @param data The data for the request.
     * @param data.name
     * @param data.password
     * @returns UserOut Successful Response
     * @throws ApiError
     */
    public static login(data: LoginData): CancelablePromise<LoginResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/auth/login',
            query: {
                name: data.name,
                password: data.password
            },
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Logout
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static logout(): CancelablePromise<LogoutResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v1/auth/logout'
        });
    }
    
    /**
     * Get User Info
     * @returns UserOut Successful Response
     * @throws ApiError
     */
    public static getUserInfo(): CancelablePromise<GetUserInfoResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v1/auth/userinfo'
        });
    }
    
}

export class 商店Service {
    /**
     * Get Products
     * @returns Product Successful Response
     * @throws ApiError
     */
    public static getProducts(): CancelablePromise<GetProductsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v1/shop/products'
        });
    }
    
    /**
     * Create Product
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Product Successful Response
     * @throws ApiError
     */
    public static createProduct(data: CreateProductData): CancelablePromise<CreateProductResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/shop/products',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Get Orders
     * @returns Order Successful Response
     * @throws ApiError
     */
    public static getOrders(): CancelablePromise<GetOrdersResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v1/shop/orders'
        });
    }
    
    /**
     * Create Order
     * @param data The data for the request.
     * @param data.productId
     * @returns Order Successful Response
     * @throws ApiError
     */
    public static createOrder(data: CreateOrderData): CancelablePromise<CreateOrderResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/shop/orders',
            query: {
                product_id: data.productId
            },
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Update Order Pay Status
     * @param data The data for the request.
     * @param data.orderNo
     * @param data.payStatus
     * @returns Order Successful Response
     * @throws ApiError
     */
    public static updateOrderPayStatus(data: UpdateOrderPayStatusData): CancelablePromise<UpdateOrderPayStatusResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/api/v1/shop/order_pay_status/{order_no}',
            path: {
                order_no: data.orderNo
            },
            query: {
                pay_status: data.payStatus
            },
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Get Wallet
     * @returns Wallet Successful Response
     * @throws ApiError
     */
    public static getWallet(): CancelablePromise<GetWalletResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v1/shop/wallet'
        });
    }
    
}