// This file is auto-generated by @hey-api/openapi-ts

export const $HTTPValidationError = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const $Order = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        order_no: {
            type: 'string',
            title: 'Order No'
        },
        user_id: {
            type: 'integer',
            title: 'User Id'
        },
        created_at: {
            type: 'string',
            format: 'date-time',
            title: 'Created At'
        },
        pay_status: {
            allOf: [
                {
                    '$ref': '#/components/schemas/PayStatus'
                }
            ],
            default: 'pending'
        },
        pay_amount: {
            type: 'integer',
            title: 'Pay Amount',
            default: 0
        },
        pay_time: {
            type: 'string',
            format: 'date-time',
            title: 'Pay Time'
        },
        status: {
            allOf: [
                {
                    '$ref': '#/components/schemas/OrderStatus'
                }
            ],
            default: 'normal'
        },
        product_snap_image: {
            type: 'string',
            title: 'Product Snap Image'
        },
        product_snap_name: {
            type: 'string',
            title: 'Product Snap Name'
        },
        product_snap_price: {
            type: 'number',
            title: 'Product Snap Price'
        },
        product_snap_description: {
            type: 'string',
            title: 'Product Snap Description'
        },
        product_id: {
            type: 'integer',
            title: 'Product Id'
        }
    },
    type: 'object',
    required: ['id', 'user_id', 'product_snap_image', 'product_snap_name', 'product_snap_price', 'product_snap_description', 'product_id'],
    title: 'Order'
} as const;

export const $OrderStatus = {
    type: 'string',
    enum: ['normal', 'cancel'],
    title: 'OrderStatus'
} as const;

export const $PayStatus = {
    type: 'string',
    enum: ['pending', 'success'],
    title: 'PayStatus'
} as const;

export const $Product = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        image: {
            type: 'string',
            title: 'Image'
        },
        name: {
            type: 'string',
            title: 'Name'
        },
        price: {
            type: 'number',
            title: 'Price'
        },
        description: {
            type: 'string',
            title: 'Description'
        },
        sold: {
            type: 'integer',
            title: 'Sold',
            default: 0
        },
        status: {
            allOf: [
                {
                    '$ref': '#/components/schemas/ProductStatus'
                }
            ],
            default: 'active'
        }
    },
    type: 'object',
    required: ['id', 'image', 'name', 'price', 'description'],
    title: 'Product'
} as const;

export const $ProductIn = {
    properties: {
        name: {
            type: 'string',
            title: 'Name'
        },
        image: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Image'
        },
        price: {
            type: 'number',
            title: 'Price'
        },
        description: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Description'
        }
    },
    type: 'object',
    required: ['name', 'price'],
    title: 'ProductIn'
} as const;

export const $ProductStatus = {
    type: 'string',
    enum: ['active', 'offline'],
    title: 'ProductStatus'
} as const;

export const $UserOut = {
    properties: {
        name: {
            type: 'string',
            title: 'Name'
        },
        id: {
            type: 'integer',
            title: 'Id'
        },
        email: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Email'
        }
    },
    type: 'object',
    required: ['name', 'id', 'email'],
    title: 'UserOut'
} as const;

export const $ValidationError = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;

export const $Wallet = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        user_id: {
            type: 'integer',
            title: 'User Id'
        },
        balance: {
            type: 'integer',
            title: 'Balance',
            default: 0
        }
    },
    type: 'object',
    required: ['id', 'user_id'],
    title: 'Wallet'
} as const;